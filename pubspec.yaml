name: planning_poker_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.2+5

environment:
  sdk: '>=3.3.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  firebase_core: ^2.31.0
  url_strategy: ^0.2.0
  cloud_firestore: ^4.17.4
  provider: ^6.0.1
  shared_preferences: ^2.0.8
  cached_network_image: ^3.0.0
  percent_indicator: ^3.0.1
  image_picker: ^0.8.4+4
  firebase_storage: ^11.7.5
  image_picker_web: ^3.1.1
  path_provider: ^2.0.5
  firebase_analytics: ^10.10.6
  qr_flutter: ^4.1.0
  uni_links: ^0.5.1
  url_launcher: ^6.3.0
  flutter_svg: ^2.0.10+1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  flutter_native_splash: ^2.4.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: ^0.13.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  fonts:
    - family: Noto Serif Japanese
      fonts:
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-ExtraLight.otf
          weight: 200
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-Light.otf
          weight: 300
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-Regular.otf
          weight: 400
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-Medium.otf
          weight: 500
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-SemiBold.otf
          weight: 600
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-Bold.otf
          weight: 700
        - asset: fonts/Noto_Serif_JP/NotoSerifJP-Black.otf
          weight: 900
    - family: Outfit
      fonts:
        - asset: fonts/Outfit/static/Outfit-Thin.ttf
          weight: 100
        - asset: fonts/Outfit/static/Outfit-ExtraLight.ttf
          weight: 200
        - asset: fonts/Outfit/static/Outfit-Light.ttf
          weight: 300
        - asset: fonts/Outfit/static/Outfit-Regular.ttf
          weight: 400
        - asset: fonts/Outfit/static/Outfit-Medium.ttf
          weight: 500
        - asset: fonts/Outfit/static/Outfit-SemiBold.ttf
          weight: 600
        - asset: fonts/Outfit/static/Outfit-Bold.ttf
          weight: 700
        - asset: fonts/Outfit/static/Outfit-ExtraBold.ttf
          weight: 800
        - asset: fonts/Outfit/static/Outfit-Black.ttf
          weight: 900
    - family: Readex Pro
      fonts:
        - asset: fonts/Readex_Pro/static/ReadexPro-ExtraLight.ttf
          weight: 200
        - asset: fonts/Readex_Pro/static/ReadexPro-Light.ttf
          weight: 300
        - asset: fonts/Readex_Pro/static/ReadexPro-Regular.ttf
          weight: 400
        - asset: fonts/Readex_Pro/static/ReadexPro-Medium.ttf
          weight: 500
        - asset: fonts/Readex_Pro/static/ReadexPro-SemiBold.ttf
          weight: 600
        - asset: fonts/Readex_Pro/static/ReadexPro-Bold.ttf
          weight: 700
    - family: M PLUS 1
      fonts:
        - asset: fonts/M_PLUS_1/static/MPLUS1-Thin.ttf
          weight: 100
        - asset: fonts/M_PLUS_1/static/MPLUS1-ExtraLight.ttf
          weight: 200
        - asset: fonts/M_PLUS_1/static/MPLUS1-Light.ttf
          weight: 300
        - asset: fonts/M_PLUS_1/static/MPLUS1-Regular.ttf
          weight: 400
        - asset: fonts/M_PLUS_1/static/MPLUS1-Medium.ttf
          weight: 500
        - asset: fonts/M_PLUS_1/static/MPLUS1-SemiBold.ttf
          weight: 600
        - asset: fonts/M_PLUS_1/static/MPLUS1-Bold.ttf
          weight: 700
        - asset: fonts/M_PLUS_1/static/MPLUS1-ExtraBold.ttf
          weight: 800
        - asset: fonts/M_PLUS_1/static/MPLUS1-Black.ttf
          weight: 900
  assets:
    - assets/images/default_face.png
    - assets/images/appstore_black.svg
    - assets/images/googleplaystore_black.svg
    - assets/images/apple.png
    - assets/images/android.png

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# add flutter_native_splash
flutter_native_splash:
  color: "#fef8ff" # スプラッシュ画面の背景色
  image: assets/images/Icon-512.png # 表示したい画像のパス
  android: true
  ios: true
  ios_content_mode: center # 画像のコンテンツモードを指定
  android_gravity: center # 画像の配置位置を指定
  android_12: # android のスプラッシュスクリーン実装用に使用
    # icon_background_color: "#fef8ff"
    color: "#fef8ff"
    image: assets/images/Icon-fef8ff-1152.png

# add flutter_launcher_icons
flutter_icons:
  android: true
  ios: true
  image_path_ios: "assets/images/Icon-fef8ff-1024.png"
  image_path_android: "assets/images/Icon-fef8ff-1024_main768_circle.png"
  adaptive_icon_background: "#fef8ff"
  adaptive_icon_foreground: "assets/images/Icon-fef8ff-1024_main512.png"
